;; Add Two Numbers (with named banks)
;; 
;; Banks can also be given names, for readability:

00 ADD TWO NUMBERS  ;; Comment describing program
02 00 MSG           ;; Name Bank 00 "MSG"
02 01 A             ;; Name Bank 01 "A"
02 02 B             ;; Name Bank 02 "B"
10 00 ENTER NUMBER  ;; Store string "ENTER NUMBER" in MSG
03 00 00            ;; Output the contents of MSG to the LCD ("ENTER NUMBER")
04 01 01            ;; Store the button presses to A
06 12 01            ;; Converts the user-input to an integer.
03 00 00            ;; Output the contents of Bank 00 to the LCD ("ENTER NUMBER")
04 01 02            ;; Store the button presses to B
06 12 02            ;; Converts the user-input to an integer.
30 01 02            ;; Add B to A
03 00 01            ;; Output the contents of A (the sum of the addition)

;; The interpreter would replace the above with mnemonics as the user typed:
;; 
;; !!! ADD TWO NUMBERS    ;; Comment describing program
;;     @00 MSG            ;; Name Bank 00 "MSG"
;;     @01 A              ;; Name Bank 01 "A"
;;     @02 B              ;; Name Bank 02 "B"
;; VAR MSG ENTER NUMBER   ;; Store string "ENTER NUMBER" in MSG
;;  << OUT MSG            ;; Output the contents of Bank 00 to the LCD ("ENTER NUMBER")
;;  >>  IN A              ;; Store the button presses to Bank 01
;;  TO INT A              ;; Converts the user-input to an integer.
;;  << OUT MSG            ;; Output the contents of Bank 00 to the LCD ("ENTER NUMBER")
;;  >>  IN B              ;; Store the button presses to Bank 02
;;  TO INT B              ;; Converts the user-input to an integer.
;;   + A B                ;; Add Bank 02 to Bank 01
;;  << OUT A              ;; Output the contents of Bank 01 (the sum of the addition)