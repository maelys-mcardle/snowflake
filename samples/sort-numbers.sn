00 NAME BANKS

02 00 MESSAGE                    ;; @00 MESSAGE
02 01 MAX_NUM_TO_SORT            ;; @01 MAX_NUM_TO_SORT
02 02 LOOP_ITERATION             ;; @02 LOOP_ITERATION
02 03 NUM_TO_PUT_IN_ARRAY        ;; @03 NUM_TO_PUT_IN_ARRAY
02 04 ARRAY                      ;; @04 ARRAY
02 05 SORTED_ARRAY               ;; @05 SORTED_ARRAY
02 06 ARRAY_SIZE                 ;; @06 ARRAY_SIZE
02 07 SORTED_ARRAY_SIZE          ;; @07 SORTED_ARRAY_SIZE
02 08 LOWEST_NUM                 ;; @08 LOWEST_NUM
02 09 ARRAY_INDEX                ;; @09 ARRAY_INDEX
02 10 NUM_AT_INDEX               ;; @10 NUM_AT_INDEX
02 11 ZERO                       ;; @11 ZERO

00 ASK THE USER HOW MANY NUMBERS TO SORT

14 00 Amount of numbers to sort:  ;; STR MESSAGE Amount of...
03 00 00                          ;;  << OUT MESSAGE

00 GET THE NUMBER

04 01 01                          ;;  >>  IN MAX_NUM_TO_SORT 
06 12 01                          ;;  TO INT MAX_NUM_TO_SORT 

00 ASK THE USER TO ENTER NUMBERS

12 02 0                           ;; INT LOOP_ITERATION 0
15 04                             ;;  [] ARRAY

01 00 ENTER_NUMBER_LOOP_START     ;; ### :00 ENTER_NUMBER_LOOP_START
14 00 Enter a number:             ;; STR MESSAGE Enter a...
03 00 00                          ;;  << OUT MESSAGE

00 GET THE NUMBER AND ADD TO ARRAY

04 01 03                          ;;  >> IN NUM_TO_PUT_IN_ARRAY
06 12 03                          ;;  TO INT NUM_TO_PUT_IN_ARRAY
50 04 03                          ;; +[] ARRAY NUM_TO_PUT_IN_ARRAY

00 CHECK IF ALL NUMBERS ENTERED

37 02                             ;;  +1 LOOP_ITERATION
25 02 01                          ;; IF< LOOP_ITERATION MAX_NUM_TO_SORT
20 00                             ;;  -> ENTER_NUMBER_LOOP_START

00 SORT NUMBERS

15 05                             ;;  [] SORTED_ARRAY
01 01 SORT_LOOP_START             ;; ### :01 SORT_LOOP_START

00 CHECK ARRAY IS ALREADY SORTED

12 11 0                           ;; INT ZERO 0
09 06 04                          ;; LEN ARRAY_SIZE ARRAY
22 06 11                          ;; IF= ARRAY_SIZE ZERO
20 02                             ;;  -> SORT_LOOP_END

00 FIND THE LOWEST NUMBER

12 09 0                           ;; INT ARRAY_INDEX 0
52 04 08                          ;; -[] ARRAY LOWEST_NUM

01 03 GET_LOWEST_NUMBER_LOOP_START 

00 CHECK IF ARRAY EXHAUSTED

09 06 04                          ;; LEN ARRAY_SIZE ARRAY
25 09 06                          ;; IF< ARRAY_INDEX ARRAY_SIZE
20 11                             ;;  -> GRAB_NUMBER_FROM_ARRAY
20 04                             ;;  -> GET_LOWEST_NUMBER_LOOP_END

01 11 GRAB_NUMBER_FROM_ARRAY

56 04 09                          ;; [<] ARRAY ARRAY_INDEX
52 04 10                          ;; -[] ARRAY NUM_AT_INDEX

25 10 08                          ;; IF< NUM_AT_INDEX LOWEST_NUM
20 05                             ;;  -> NUM_AT_INDEX_IS_LOWER
20 06                             ;;  -> NUM_AT_INDEX_IS_HIGHER

01 05 NUM_AT_INDEX_IS_LOWER

50 04 08                          ;; +[] ARRAY LOWEST_NUM
57 04 09                          ;; [>] ARRAY ARRAY_INDEX
05 08 10                          ;;   = LOWEST_NUM NUM_AT_INDEX
20 07                             ;;  -> GO_TO_NEXT_ARRAY_ITEM

01 06 NUM_AT_INDEX_IS_HIGHER

50 04 10                          ;; +[] ARRAY NUM_AT_INDEX
57 04 09                          ;; [>] ARRAY ARRAY_INDEX
20 07                             ;;  -> GO_TO_NEXT_ARRAY_ITEM

01 07 GO_TO_NEXT_ARRAY_ITEM

37 09                             ;;  +1 ARRAY_INDEX
20 03                             ;;  -> GET_LOWEST_NUMBER_LOOP_START

01 04 GET_LOWEST_NUMBER_LOOP_END

51 05 08                          ;; []+ SORTED_ARRAY LOWEST_NUM
20 01                             ;;  -> SORT_LOOP_START

01 02 SORT_LOOP_END               ;; ### :02 SORT_LOOP_END

14 00 Sorted numbers:             ;; STR MESSAGE Sorted...
03 00 00                          ;;  << OUT MESSAGE

01 08 PRINT_SORTED_NUMBER_START

00 CHECK IF ARRAY EXHAUSTED

09 06 05                          ;; LEN ARRAY_SIZE SORTED_ARRAY
22 06 11                          ;; IF= ARRAY_SIZE ZERO
20 09                             ;;  -> PRINT_SORTED_NUMBER_END

00 GRAB AND PRINT NUMBER

52 05 08                          ;; -[] SORTED_ARRAY LOWEST_NUM
03 00 08                          ;;  << OUT LOWEST_NUM
20 08                             ;;  -> PRINT_SORTED_NUMBER_START

01 09 PRINT_SORTED_NUMBER_END

01 10 PROGRAM_END
