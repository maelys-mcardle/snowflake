;; Sorting algorithm (condensed)
;;
;; This is the same code as "sort-numbers.sn", but with
;; all the extraneous information removed, reducing the
;; program to 397 bytes.

14 0 Amount of numbers to sort:
3 0 0
4 1 1
6 12 1
12 2 0
15 4
1 0
14 0 Enter a number:
3 0 0
4 1 3
6 12 3
51 4 3
37 2
25 2 1
20 0
15 5
1 1
12 11 0
9 6 4
22 6 11
20 2
12 9 0
52 4 8
1 3
9 6 4
25 9 6
20 11 
20 4 
1 11
56 4 9
52 4 10 
25 10 8
20 5 
20 6
1 5
50 4 8
5 8 10 
20 7
1 6
50 4 10
20 7
1 7
37 9
20 3
1 4
51 5 8
20 1
1 2
14 0 Sorted numbers:
3 0 0
1 8
9 6 5
22 6 11
20 9
52 5 8
3 0 8
20 8
1 9

;; ./snowflake --print samples/condensed-code.sn 
;; STR @00 Amount of numbers to sort:
;;  << OUT @00
;;  >>  IN @01
;;  TO INT @01
;; INT @02 0
;;  [] @04 
;; ### :00 
;; STR @00 Enter a number:
;;  << OUT @00
;;  >>  IN @03
;;  TO INT @03
;; []+ @04 @03
;;  +1 @02 
;; IF< @02 @01
;;  -> :00 
;;  [] @05 
;; ### :01 
;; INT @11 0
;; LEN @06 @04
;; IF= @06 @11
;;  -> :02 
;; INT @09 0
;; -[] @04 @08
;; ### :03 
;; LEN @06 @04
;; IF< @09 @06
;;  -> :11 
;;  -> :04 
;; ### :11 
;; [<] @04 @09
;; -[] @04 @10
;; IF< @10 @08
;;  -> :05 
;;  -> :06 
;; ### :05 
;; +[] @04 @08
;;   = @08 @10
;;  -> :07 
;; ### :06 
;; +[] @04 @10
;;  -> :07 
;; ### :07 
;;  +1 @09 
;;  -> :03 
;; ### :04 
;; []+ @05 @08
;;  -> :01 
;; ### :02 
;; STR @00 Sorted numbers:
;;  << OUT @00
;; ### :08 
;; LEN @06 @05
;; IF= @06 @11
;;  -> :09 
;; -[] @05 @08
;;  << OUT @08
;;  -> :08 
;; ### :09

;; ./snowflake --run samples/condensed-code.sn 
;; Amount of numbers to sort:
;; 5
;; Enter a number:
;; 23
;; Enter a number:
;; 42
;; Enter a number:
;; 3
;; Enter a number:
;; 12
;; Enter a number:
;; 9
;; Sorted numbers:
;; 3
;; 9
;; 12
;; 23
;; 42